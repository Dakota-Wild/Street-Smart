{"remainingRequest":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kobelee/Desktop/Street-Smart/frontend/src/components/BaseInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/src/components/BaseInput.vue","mtime":1605408466609},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBpbmhlcml0QXR0cnM6IGZhbHNlLAogIG5hbWU6ICJiYXNlLWlucHV0IiwKICBwcm9wczogewogICAgcmVxdWlyZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVzY3JpcHRpb246ICJXaGV0aGVyIGlucHV0IGlzIHJlcXVpcmVkIChhZGRzIGFuIGFzdGVyaXggKikiCiAgICB9LAogICAgdmFsaWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVzY3JpcHRpb246ICJXaGV0aGVyIGlzIHZhbGlkIiwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgbGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogIklucHV0IGxhYmVsICh0ZXh0IGJlZm9yZSBpbnB1dCkiCiAgICB9LAogICAgZXJyb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogIklucHV0IGVycm9yIChiZWxvdyBpbnB1dCkiCiAgICB9LAogICAgbGFiZWxDbGFzc2VzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVzY3JpcHRpb246ICJJbnB1dCBsYWJlbCBjc3MgY2xhc3NlcyIKICAgIH0sCiAgICBpbnB1dENsYXNzZXM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogIklucHV0IGNzcyBjbGFzc2VzIgogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgIGRlc2NyaXB0aW9uOiAiSW5wdXQgdmFsdWUiCiAgICB9LAogICAgYWRkb25SaWdodEljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZXNjcmlwdGlvbjogIkFkZG9uIHJpZ2h0IGljb24iCiAgICB9LAogICAgYWRkb25MZWZ0SWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlc2NyaXB0aW9uOiAiQWRkb250IGxlZnQgaWNvbiIKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb2N1c2VkOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBsaXN0ZW5lcnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgLi4udGhpcy4kbGlzdGVuZXJzLAogICAgICAgIGlucHV0OiB0aGlzLnVwZGF0ZVZhbHVlLAogICAgICAgIGZvY3VzOiB0aGlzLm9uRm9jdXMsCiAgICAgICAgYmx1cjogdGhpcy5vbkJsdXIKICAgICAgfTsKICAgIH0sCiAgICBzbG90RGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBmb2N1c2VkOiB0aGlzLmZvY3VzZWQsCiAgICAgICAgLi4udGhpcy5saXN0ZW5lcnMKICAgICAgfTsKICAgIH0sCiAgICBoYXNJY29uKCkgewogICAgICBjb25zdCB7IGFkZG9uUmlnaHQsIGFkZG9uTGVmdCB9ID0gdGhpcy4kc2xvdHM7CiAgICAgIHJldHVybiAoCiAgICAgICAgYWRkb25SaWdodCAhPT0gdW5kZWZpbmVkIHx8CiAgICAgICAgYWRkb25MZWZ0ICE9PSB1bmRlZmluZWQgfHwKICAgICAgICB0aGlzLmFkZG9uUmlnaHRJY29uICE9PSB1bmRlZmluZWQgfHwKICAgICAgICB0aGlzLmFkZG9uTGVmdEljb24gIT09IHVuZGVmaW5lZAogICAgICApOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlVmFsdWUoZXZ0KSB7CiAgICAgIGxldCB2YWx1ZSA9IGV2dC50YXJnZXQudmFsdWU7CiAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgdmFsdWUpOwogICAgfSwKICAgIG9uRm9jdXModmFsdWUpIHsKICAgICAgdGhpcy5mb2N1c2VkID0gdHJ1ZTsKICAgICAgdGhpcy4kZW1pdCgiZm9jdXMiLCB2YWx1ZSk7CiAgICB9LAogICAgb25CbHVyKHZhbHVlKSB7CiAgICAgIHRoaXMuZm9jdXNlZCA9IGZhbHNlOwogICAgICB0aGlzLiRlbWl0KCJibHVyIiwgdmFsdWUpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["BaseInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"form-group\"\n         :class=\"[\n       {'input-group': hasIcon},\n       {'has-danger': error},\n       {'focused': focused},\n       {'has-label': label || $slots.label},\n       {'has-success': valid === true},\n       {'has-danger': valid === false}\n       ]\">\n        <slot name=\"label\">\n            <label v-if=\"label\" class=\"form-control-label\" :class=\"labelClasses\">\n                {{label}}\n                <span v-if=\"required\">*</span>\n            </label>\n        </slot>\n\n\n        <div v-if=\"addonLeftIcon || $slots.addonLeft\" class=\"input-group-prepend\">\n        <span class=\"input-group-text\">\n          <slot name=\"addonLeft\">\n            <i :class=\"addonLeftIcon\"></i>\n          </slot>\n        </span>\n        </div>\n        <slot v-bind=\"slotData\">\n            <input\n                    :value=\"value\"\n                    v-on=\"listeners\"\n                    v-bind=\"$attrs\"\n                    class=\"form-control\"\n                    :class=\"[\n                     {'is-valid': valid === true},\n                     {'is-invalid': valid === false}, inputClasses]\"\n                    aria-describedby=\"addon-right addon-left\">\n        </slot>\n        <div v-if=\"addonRightIcon || $slots.addonRight\" class=\"input-group-append\">\n          <span class=\"input-group-text\">\n              <slot name=\"addonRight\">\n                  <i :class=\"addonRightIcon\"></i>\n              </slot>\n          </span>\n        </div>\n        <slot name=\"infoBlock\"></slot>\n        <slot name=\"helpBlock\">\n            <div class=\"text-danger invalid-feedback\" style=\"display: block;\" :class=\"{'mt-2': hasIcon}\" v-if=\"error\">\n                {{ error }}\n            </div>\n        </slot>\n    </div>\n</template>\n<script>\nexport default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    required: {\n      type: Boolean,\n      description: \"Whether input is required (adds an asterix *)\"\n    },\n    valid: {\n      type: Boolean,\n      description: \"Whether is valid\",\n      default: undefined\n    },\n    label: {\n      type: String,\n      description: \"Input label (text before input)\"\n    },\n    error: {\n      type: String,\n      description: \"Input error (below input)\"\n    },\n    labelClasses: {\n      type: String,\n      description: \"Input label css classes\"\n    },\n    inputClasses: {\n      type: String,\n      description: \"Input css classes\"\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\"\n    },\n    addonRightIcon: {\n      type: String,\n      description: \"Addon right icon\"\n    },\n    addonLeftIcon: {\n      type: String,\n      description: \"Addont left icon\"\n    }\n  },\n  data() {\n    return {\n      focused: false\n    };\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.updateValue,\n        focus: this.onFocus,\n        blur: this.onBlur\n      };\n    },\n    slotData() {\n      return {\n        focused: this.focused,\n        ...this.listeners\n      };\n    },\n    hasIcon() {\n      const { addonRight, addonLeft } = this.$slots;\n      return (\n        addonRight !== undefined ||\n        addonLeft !== undefined ||\n        this.addonRightIcon !== undefined ||\n        this.addonLeftIcon !== undefined\n      );\n    }\n  },\n  methods: {\n    updateValue(evt) {\n      let value = evt.target.value;\n      this.$emit(\"input\", value);\n    },\n    onFocus(value) {\n      this.focused = true;\n      this.$emit(\"focus\", value);\n    },\n    onBlur(value) {\n      this.focused = false;\n      this.$emit(\"blur\", value);\n    }\n  }\n};\n</script>\n<style>\n</style>\n"]}]}