{"remainingRequest":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kobelee/Desktop/Street-Smart/frontend/src/components/BaseTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/src/components/BaseTable.vue","mtime":1605423036677},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYmFzZS10YWJsZScsCiAgcHJvcHM6IHsKICAgIGNvbHVtbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLAogICAgICBkZXNjcmlwdGlvbjogJ1RhYmxlIGNvbHVtbnMnCiAgICB9LAogICAgZGF0YTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10sCiAgICAgIGRlc2NyaXB0aW9uOiAnVGFibGUgZGF0YScKICAgIH0sCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywgLy8gc3RyaXBlZCB8IGhvdmVyCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgICBkZXNjcmlwdGlvbjogJ1doZXRoZXIgdGFibGUgaXMgc3RyaXBlZCBvciBob3ZlciB0eXBlJwogICAgfSwKICAgIHRoZWFkQ2xhc3NlczogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgICBkZXNjcmlwdGlvbjogJzx0aGVhZD4gY3NzIGNsYXNzZXMnCiAgICB9LAogICAgdGJvZHlDbGFzc2VzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICAgIGRlc2NyaXB0aW9uOiAnPHRib2R5PiBjc3MgY2xhc3NlcycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB0YWJsZUNsYXNzKCkgewogICAgICByZXR1cm4gdGhpcy50eXBlICYmIGB0YWJsZS0ke3RoaXMudHlwZX1gOwogICAgfSwKICAgIGNvbHNXaXRoVmFsdWUoKSB7CiAgICAgIHJldHVybiAocm93KSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1ucy5maWx0ZXIoY29sdW1uID0+IHRoaXMuaGFzVmFsdWUocm93LCBjb2x1bW4pKQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYXNWYWx1ZShpdGVtLCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIGl0ZW1bY29sdW1uLnRvTG93ZXJDYXNlKCldICE9PSAndW5kZWZpbmVkJzsKICAgIH0sCiAgICBpdGVtVmFsdWUoaXRlbSwgY29sdW1uKSB7CiAgICAgIHJldHVybiBpdGVtW2NvbHVtbi50b0xvd2VyQ2FzZSgpXTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["BaseTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <table class=\"table tablesorter\" :class=\"tableClass\">\n    <thead :class=\"theadClasses\">\n      <tr>\n        <slot name=\"columns\" :columns=\"columns\">\n          <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\n        </slot>\n      </tr>\n    </thead>\n    <tbody :class=\"tbodyClasses\">\n      <tr v-for=\"(item, index) in data\" :key=\"index\">\n        <slot :row=\"item\" :index=\"index\">\n          <td\n            v-for=\"(column, index) in colsWithValue(item)\"\n            :key=\"index\">\n            {{ itemValue(item, column) }}\n          </td>\n        </slot>\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\nexport default {\n  name: 'base-table',\n  props: {\n    columns: {\n      type: Array,\n      default: () => [],\n      description: 'Table columns'\n    },\n    data: {\n      type: Array,\n      default: () => [],\n      description: 'Table data'\n    },\n    type: {\n      type: String, // striped | hover\n      default: '',\n      description: 'Whether table is striped or hover type'\n    },\n    theadClasses: {\n      type: String,\n      default: '',\n      description: '<thead> css classes'\n    },\n    tbodyClasses: {\n      type: String,\n      default: '',\n      description: '<tbody> css classes'\n    }\n  },\n  computed: {\n    tableClass() {\n      return this.type && `table-${this.type}`;\n    },\n    colsWithValue() {\n      return (row) => {\n        return this.columns.filter(column => this.hasValue(row, column))\n      }\n    }\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== 'undefined';\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}