{"remainingRequest":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/thread-loader/dist/cjs.js!/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/babel-loader/lib/index.js!/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kobelee/Desktop/Street-Smart/frontend/src/components/BaseNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/src/components/BaseNav.vue","mtime":1605423036676},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kobelee/Desktop/Street-Smart/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTmF2YmFyVG9nZ2xlQnV0dG9uIGZyb20gIi4vTmF2YmFyVG9nZ2xlQnV0dG9uIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJiYXNlLW5hdiIsCiAgY29tcG9uZW50czogewogICAgTmF2YmFyVG9nZ2xlQnV0dG9uOiBOYXZiYXJUb2dnbGVCdXR0b24KICB9LAogIHByb3BzOiB7CiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiTmF2YmFyIHR5cGUgKGUuZyBkZWZhdWx0LCBwcmltYXJ5IGV0YykiCiAgICB9LAogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIiwKICAgICAgZGVzY3JpcHRpb246ICJUaXRsZSBvZiBuYXZiYXIiCiAgICB9LAogICAgY29udGVudElkOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgIGRlZmF1bHQ6IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoKSwKICAgICAgZGVzY3JpcHRpb246ICJFeHBsaWNpdCBpZCBmb3IgdGhlIG1lbnUuIEJ5IGRlZmF1bHQgaXQncyBhIGdlbmVyYXRlZCByYW5kb20gbnVtYmVyIgogICAgfSwKICAgIGNvbnRhaW5lckNsYXNzZXM6IHsKICAgICAgdHlwZTogW1N0cmluZywgT2JqZWN0LCBBcnJheV0sCiAgICAgIGRlZmF1bHQ6ICdjb250YWluZXItZmx1aWQnCiAgICB9LAogICAgdHJhbnNwYXJlbnQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgIGRlc2NyaXB0aW9uOiAiV2hldGhlciBuYXZiYXIgaXMgdHJhbnNwYXJlbnQiCiAgICB9LAogICAgZXhwYW5kOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICBkZXNjcmlwdGlvbjogIldoZXRoZXIgbmF2YmFyIHNob3VsZCBjb250YWluIGBuYXZiYXItZXhwYW5kLWxnYCBjbGFzcyIKICAgIH0sCiAgICBzaG93VG9nZ2xlQnV0dG9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b2dnbGVkOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlTWVudTogZnVuY3Rpb24gY2xvc2VNZW51KCkgewogICAgICB0aGlzLnRvZ2dsZWQgPSBmYWxzZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["BaseNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,kBAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KADA;AAMA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KANA;AAWA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA,IAAA,CAAA,MAAA,GAAA,QAAA,EAFA;AAGA,MAAA,WAAA,EACA;AAJA,KAXA;AAiBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KArBA;AA0BA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KA1BA;AA+BA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA/BA,GALA;AAyCA,EAAA,IAzCA,kBAyCA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,OAAA,GAAA,KAAA;AACA;AAHA;AA9CA,CAAA","sourcesContent":["<template>\n    <nav class=\"navbar\"\n         :class=\"[\n            {'navbar-expand-md': expand},\n            {'navbar-transparent': transparent},\n            {[`bg-${type}`]: type}\n         ]\">\n        <div :class=\"containerClasses\">\n            <slot name=\"brand\">\n                <router-link :to=\"$route.path\"\n                             class=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\">\n                    {{$route.name}}\n                </router-link>\n            </slot>\n            <navbar-toggle-button v-if=\"showToggleButton\"\n                                  :toggled=\"toggled\"\n                                  :target=\"contentId\"\n                                  @click.native.stop=\"toggled = !toggled\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </navbar-toggle-button>\n\n            <div class=\"collapse navbar-collapse\"\n                 :class=\"{show: toggled}\"\n                 :id=\"contentId\"\n                 v-click-outside=\"closeMenu\">\n\n                <slot :close-menu=\"closeMenu\"></slot>\n            </div>\n        </div>\n    </nav>\n</template>\n<script>\n  import NavbarToggleButton from \"./NavbarToggleButton\";\n\n  export default {\n    name: \"base-nav\",\n    components: {\n      NavbarToggleButton\n    },\n    props: {\n      type: {\n        type: String,\n        default: \"\",\n        description: \"Navbar type (e.g default, primary etc)\"\n      },\n      title: {\n        type: String,\n        default: \"\",\n        description: \"Title of navbar\"\n      },\n      contentId: {\n        type: [String, Number],\n        default: Math.random().toString(),\n        description:\n          \"Explicit id for the menu. By default it's a generated random number\"\n      },\n      containerClasses: {\n        type: [String, Object, Array],\n        default: 'container-fluid'\n      },\n      transparent: {\n        type: Boolean,\n        default: false,\n        description: \"Whether navbar is transparent\"\n      },\n      expand: {\n        type: Boolean,\n        default: false,\n        description: \"Whether navbar should contain `navbar-expand-lg` class\"\n      },\n      showToggleButton: {\n        type: Boolean,\n        default: true\n      }\n    },\n    data() {\n      return {\n        toggled: false\n      };\n    },\n    methods: {\n      closeMenu() {\n        this.toggled = false;\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}